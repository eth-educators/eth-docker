x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  execution:
    restart: "unless-stopped"
    build:
      context: ./nimbus-el
      dockerfile: ${NIMEL_DOCKERFILE}
      args:
        - BUILD_TARGET=${NIMEL_SRC_BUILD_TARGET:-master}
        - SRC_REPO=${NIMEL_SRC_REPO:-https://github.com/status-im/nimbus-eth1}
        - DOCKER_TAG=${NIMEL_DOCKER_TAG:-nonesuch}
        - DOCKER_REPO=${NIMEL_DOCKER_REPO:-nonesuch}
    stop_grace_period: 5m
    stop_signal: SIGINT
    image: nimbus-el:local
    pull_policy: never
    user: user
    environment:
      - JWT_SECRET=${JWT_SECRET:-}
      - EL_EXTRAS=${EL_EXTRAS:-}
      - ARCHIVE_NODE=${ARCHIVE_NODE:-}
    volumes:
      - nimbus-el-data:/var/lib/nimbus
      - /etc/localtime:/etc/localtime:ro
      - jwtsecret:/var/lib/nimbus/ee-secret
    ports:
      - ${HOST_IP:-}:${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/tcp
      - ${HOST_IP:-}:${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/udp
    networks:
      default:
        aliases:
          - eth1
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - nimbus
      - --rpc
      - --rpc-address=0.0.0.0
      - --rpc-port=${EL_RPC_PORT:-8545}
      - --data-dir=/var/lib/nimbus
      - --key-store=/var/lib/nimbus/nimbus/keystore
      - --tcp-port=${EL_P2P_PORT:-30303}
      - --ws
      - --ws-address=0.0.0.0
      - --ws-port=${EL_WS_PORT:-8546}
      - --network=${NETWORK}
      - --metrics
      - --metrics-port=6060
      - --metrics-address=0.0.0.0
      - --jwt-secret=/var/lib/nimbus/ee-secret/jwtsecret
      - --engine-api
      - --engine-api-port=${EE_PORT:-8551}
      - --engine-api-address=0.0.0.0
      - --max-peers=${EL_MAX_PEER_COUNT:-25}
      - --log-level=${LOG_LEVEL}
    labels:
      - traefik.enable=true
      - traefik.http.routers.${EL_HOST:-el}.service=${EL_HOST:-el}
      - traefik.http.routers.${EL_HOST:-el}.entrypoints=websecure
      - traefik.http.routers.${EL_HOST:-el}.rule=Host(`${EL_HOST:-el}.${DOMAIN}`)
      - traefik.http.routers.${EL_HOST:-el}.tls.certresolver=letsencrypt
      - traefik.http.routers.${EL_HOST:-el}lb.service=${EL_HOST:-el}
      - traefik.http.routers.${EL_HOST:-el}lb.entrypoints=websecure
      - traefik.http.routers.${EL_HOST:-el}lb.rule=Host(`${EL_LB:-el-lb}.${DOMAIN}`)
      - traefik.http.routers.${EL_HOST:-el}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${EL_HOST:-el}.loadbalancer.server.port=${EL_RPC_PORT:-8545}
      - traefik.http.routers.${EL_WS_HOST:-elws}.service=${EL_WS_HOST:-elws}
      - traefik.http.routers.${EL_WS_HOST:-elws}.entrypoints=websecure
      - traefik.http.routers.${EL_WS_HOST:-elws}.rule=Host(`${EL_WS_HOST:-elws}.${DOMAIN}`)
      - traefik.http.routers.${EL_WS_HOST:-elws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.service=${EL_WS_HOST:-elws}
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.entrypoints=websecure
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.rule=Host(`${EL_WS_LB:-elws-lb}.${DOMAIN}`)
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${EL_WS_HOST:-elws}.loadbalancer.server.port=${EL_WS_PORT:-8546}
      - traefik.http.routers.${EE_HOST:-ee}.service=${EE_HOST:-ee}
      - traefik.http.routers.${EE_HOST:-ee}.entrypoints=websecure
      - traefik.http.routers.${EE_HOST:-ee}.rule=Host(`${EE_HOST:-ee}.${DOMAIN}`)
      - traefik.http.routers.${EE_HOST:-ee}.tls.certresolver=letsencrypt
      - traefik.http.services.${EE_HOST:-ee}.loadbalancer.server.port=${EE_PORT:-8551}

volumes:
  nimbus-el-data:
  jwtsecret:

networks:
  default:
    enable_ipv6: ${IPV6:-false}
