# Grafana for use with rootless docker. Omits node-exporter, cadvisor, promtail and Loki
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  prometheus:
    restart: "unless-stopped"
    build:
      context: ./prometheus
    image: prometheus:local
    pull_policy: never
    volumes:
      - prom-data:/prometheus
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/conf.d/:/etc/prometheus/conf.d/:ro
      - ./prometheus/custom-prom.yml:/etc/prometheus/custom-prom.yml:ro
    environment:
      - CLIENT=${COMPOSE_FILE}
    command:
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=40d
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    <<: *logging
    depends_on:
      - blackbox-exporter
      - json-exporter
      - ethereum-metrics-exporter

  ethereum-metrics-exporter:
    restart: "unless-stopped"
    build:
      context: ./eth-metrics
    image: ethereum-metrics-exporter:local
    pull_policy: never
    environment:
      - CLIENT=${COMPOSE_FILE}
    entrypoint:
      - docker-entrypoint.sh
      - /ethereum-metrics-exporter
    <<: *logging

  blackbox-exporter:
    restart: "unless-stopped"
    image: prom/blackbox-exporter:master
    volumes:
      - ./prometheus/blackbox.yml:/config/blackbox.yml
      - /etc/localtime:/etc/localtime:ro
    <<: *logging
    command:
      - --config.file=/config/blackbox.yml

  json-exporter:
    restart: "unless-stopped"
    image: prometheuscommunity/json-exporter:latest
    volumes:
      - ./prometheus/json.yml:/config/json.yml
      - /etc/localtime:/etc/localtime:ro
    <<: *logging
    command:
      - --config.file
      - /config/json.yml

  grafana:
    restart: "unless-stopped"
    build:
      context: ./grafana
    image: grafana:local
    pull_policy: never
    user: grafana
    environment:
      - GF_SERVER_HTTP_PORT=${GRAFANA_PORT}
      - CLIENT=${COMPOSE_FILE}
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - prometheus
    entrypoint: ["provision.sh"]
    command: /run.sh
    <<: *logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=web,websecure
      - traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOST}.${DOMAIN}`)
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
      - traefik.http.services.grafana.loadbalancer.server.port=${GRAFANA_PORT}

volumes:
  grafana-data:
  grafana-config:
  prom-data:
