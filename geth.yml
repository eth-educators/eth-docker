version: "3.9"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  execution:
    restart: "unless-stopped"
    build:
      context: ./geth
      dockerfile: ${GETH_DOCKERFILE}
      args:
        - BUILD_TARGET=${GETH_SRC_BUILD_TARGET:-'$(git describe --tags $(git rev-list --tags --max-count=1))'}
        - SRC_REPO=${GETH_SRC_REPO:-https://github.com/ethereum/go-ethereum}
        - DOCKER_TAG=${GETH_DOCKER_TAG:-stable}
        - DOCKER_REPO=${GETH_DOCKER_REPO:-ethereum/client-go}
    stop_grace_period: 5m
    image: geth:local
    user: geth
    environment:
      - JWT_SECRET=${JWT_SECRET:-}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - EL_EXTRAS=${EL_EXTRAS:-}
      - ARCHIVE_NODE=${ARCHIVE_NODE:-}
      - NETWORK=${NETWORK}
    volumes:
      - geth-eth1-data:/var/lib/goethereum
      - /etc/localtime:/etc/localtime:ro
      - jwtsecret:/var/lib/goethereum/ee-secret
    ports:
      - ${HOST_IP:-}${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/tcp
      - ${HOST_IP:-}${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/udp
    networks:
      default:
        aliases:
          - eth1
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - geth
      - --http
      - --http.addr
      - 0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --datadir
      - /var/lib/goethereum
      - --port
      - ${EL_P2P_PORT:-30303}
      - --http.port
      - ${EL_RPC_PORT:-8545}
      - --ws
      - --ws.addr
      - 0.0.0.0
      - --ws.port
      - ${EL_WS_PORT:-8546}
      - --ws.origins=*
      - --metrics
      - --metrics.expensive
      - --pprof
      - --pprof.addr
      - 0.0.0.0
      - --authrpc.jwtsecret
      - /var/lib/goethereum/ee-secret/jwtsecret
      - --authrpc.addr
      - 0.0.0.0
      - --authrpc.port
      - ${EE_PORT:-8551}
      - --authrpc.vhosts=*
      - --maxpeers
      - ${EL_MAX_PEER_COUNT:-50}
    labels:
      - traefik.enable=true
      - traefik.http.routers.${EL_HOST:-el}.service=${EL_HOST:-el}
      - traefik.http.routers.${EL_HOST:-el}.entrypoints=websecure
      - traefik.http.routers.${EL_HOST:-el}.rule=Host(`${EL_HOST:-el}.${DOMAIN}`)
      - traefik.http.routers.${EL_HOST:-el}.tls.certresolver=letsencrypt
      - traefik.http.routers.${EL_HOST:-el}lb.service=${EL_HOST:-el}
      - traefik.http.routers.${EL_HOST:-el}lb.entrypoints=websecure
      - traefik.http.routers.${EL_HOST:-el}lb.rule=Host(`${EL_LB:-el-lb}.${DOMAIN}`)
      - traefik.http.routers.${EL_HOST:-el}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${EL_HOST:-el}.loadbalancer.server.port=${EL_RPC_PORT:-8545}
      - traefik.http.routers.${EL_WS_HOST:-elws}.service=${EL_WS_HOST:-elws}
      - traefik.http.routers.${EL_WS_HOST:-elws}.entrypoints=websecure
      - traefik.http.routers.${EL_WS_HOST:-elws}.rule=Host(`${EL_WS_HOST:-elws}.${DOMAIN}`)
      - traefik.http.routers.${EL_WS_HOST:-elws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.service=${EL_WS_HOST:-elws}
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.entrypoints=websecure
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.rule=Host(`${EL_WS_LB:-elws-lb}.${DOMAIN}`)
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${EL_WS_HOST:-elws}.loadbalancer.server.port=${EL_WS_PORT:-8546}
      - traefik.http.routers.${EE_HOST:-ee}.service=${EE_HOST:-ee}
      - traefik.http.routers.${EE_HOST:-ee}.entrypoints=websecure
      - traefik.http.routers.${EE_HOST:-ee}.rule=Host(`${EE_HOST:-ee}.${DOMAIN}`)
      - traefik.http.routers.${EE_HOST:-ee}.tls.certresolver=letsencrypt
      - traefik.http.services.${EE_HOST:-ee}.loadbalancer.server.port=${EE_PORT:-8551}
  set-prune-marker:
    profiles: ["tools"]
    image: alpine:3
    user: "10001:10001"
    restart: "no"
    volumes:
      - geth-eth1-data:/var/lib/goethereum
    entrypoint: ["/bin/sh","-c"]
    command: /bin/sh
volumes:
  geth-eth1-data:
  jwtsecret:
