# Client choice: See https://eth-docker.net/docs/Usage/ClientSetup for available options
COMPOSE_FILE=teku-base.yml:besu.yml
# Set the ETH address that priority fees and MEV rewards should be sent to
FEE_RECIPIENT=
# Execution client endpoint / chain source. This default uses the execution node container.
# For Teku and Lighthouse, you can specify multiple endpoints separated by commas
# This needs to be ws:// or ws:// if using Nimbus, e.g. ws://execution:8546
EL_NODE=http://execution:8545
# Execution client fallback nodes, for Prysm or Nimbus. Can't be empty.
EL_FALLBACK_NODE1=http://execution:8545
EL_FALLBACK_NODE2=http://execution:8545
# Graffiti to use for validator
GRAFFITI=eth-docker
# Network to use for consensus client. If using main net, set to mainnet.
NETWORK=prater
# Network to use for execution client. If using main net, set to mainnet.
EL_NETWORK=goerli
# CLrapid sync via initial state/checkpoint. Please create an Infura eth2/beacon project first, then replace the {projectid} and {secret} here
# Alternatively, use an already synced CL that you trust. No trailing / for Teku, please.
#RAPID_SYNC_URL=https://{projectid}:{secret}@eth2-beacon-${NETWORK}.infura.io
RAPID_SYNC_URL=

# Secure web proxy - advanced use, please see instructions
DOMAIN=example.com
ACME_EMAIL=user@example.com
CF_EMAIL=user@example.com
CF_API_TOKEN=SECRETTOKEN
AWS_PROFILE=myprofile
AWS_HOSTED_ZONE_ID=myzoneid
GRAFANA_HOST=grafana
PROM_HOST=prometheus
PRYSM_HOST=prysm
EL_HOST=el
EL_WS_HOST=elws
DDNS_SUBDOMAIN=
DDNS_PROXY=true

# Consensus client address. This could be comma-separated for Lighthouse, with failover,
# or could just be a remote consensus client URL for Teku, Lighthouse or Prysm "validator only" setups. Not in use for Nimbus.
CL_NODE=http://consensus:5052

# Some clients suggest adjusting to higher (or lower) peer count. Adjust here, per client
# Nimbus peer count should not be set below 70. CL_MIN_PEER_COUNT is used for Teku,
# and in Lodestar it is, sneakily, the target count, not the minimum
CL_MAX_PEER_COUNT=
CL_MIN_PEER_COUNT=
# Ditto for EL, currently only in use for Besu. EL_MIN_PEER_COUNT for Besu is minimum
# peers before fast sync starts
EL_MAX_PEER_COUNT=
EL_MIN_PEER_COUNT=

# Beaconcha.in API key for sending client stats. Used with lh-stats.yml or prysm-stats.yml,
# source build only for Prysm as of Sept 2021.
# Specify as just the API key, and give the machine name separately
BEACON_STATS_API=
BEACON_STATS_MACHINE=

# IP of the host you want to use in Docker (in case host has several IPs)
HOST_IP=

# P2P ports you will forward to your staking node. Adjust here if you are
# going to use something other than defaults.
EL_P2P_PORT=30303
CL_P2P_PORT=9000
PRYSM_PORT=9000
PRYSM_UDP_PORT=9000
# Local grafana dashboard port. Do not expose to Internet, it is insecure http
GRAFANA_PORT=3000
# Local key manager port. Reachable only via localhost. Also doubles as Prysm web port
KEY_API_PORT=7500
# Secure web proxy port, 443 and 80 are great defaults
TRAEFIK_WEB_PORT=443
TRAEFIK_WEB_HTTP_PORT=80
# Execution client RPC port, important when using ec-shared.yml. Also insecure, do not expose to Internet.
EL_RPC_PORT=8545
# Execution client WS port, used with Nimbus. Ditto insecure, do not expose to Internet.
EL_WS_PORT=8546
# SSV Node ports
SSV_P2P_PORT=13001
SSV_P2P_PORT_UDP=12001

# Geth cache size. This matters for low-memory machines such as RasPi 4, where
# you may want to set it to 256. Geth will use the default if this is left blank.
#GETH_CACHE=--cache=256
GETH_CACHE=

# Restart policy: Set to no if you do not want services to automatically restart
RESTART=unless-stopped
# If you want debug logs, set this to debug instead of info
LOG_LEVEL=info

# If you run a distributed setup, setting this to DISTRIBUTED=true
# will stop the nag screens during ./ethd update
DISTRIBUTED=

# You can set specific version targets and choose
# binary or compiled from source builds below,
# via `Dockerfile.binary` or `Dockerfile.source`
# These settings are only migrated when running `./ethd update --keep-targets`

# SSV
SSV_NODE_TAG=latest

# Nimbus
NIM_SRC_BUILD_TARGET=stable
NIM_DOCKER_TAG=multiarch-latest
NIM_DOCKERFILE=Dockerfile.binary

# Teku
TEKU_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
TEKU_DOCKER_TAG=latest
TEKU_DOCKERFILE=Dockerfile.binary

# Lighthouse
LH_SRC_BUILD_TARGET=stable
LH_DOCKER_TAG=latest-modern
LH_DOCKERFILE=Dockerfile.binary

# Prysm
PRYSM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
PRYSM_DOCKER_TAG=stable
PRYSM_DOCKERFILE=Dockerfile.binary

# Lodestar
LS_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
LS_DOCKER_TAG=latest
LS_DOCKERFILE=Dockerfile.binary

# Erigon
ERIGON_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
ERIGON_DOCKER_TAG=stable
ERIGON_DOCKERFILE=Dockerfile.binary

#Akula
AKULA_SRC_BUILD_TARGET=master
AKULA_DOCKER_TAG=
AKULA_DOCKERFILE=Dockerfile.source

# Go-Ethereum aka Geth
GETH_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
GETH_DOCKER_TAG=stable
GETH_DOCKERFILE=Dockerfile.binary

# Nethermind
NM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
NM_DOCKER_TAG=latest
NM_DOCKERFILE=Dockerfile.binary

# Besu
# SRC build target can be a tag, a branch, or a pr as "pr-ID"
BESU_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
BESU_DOCKER_TAG=latest
BESU_DOCKERFILE=Dockerfile.binary

# staking-deposit-cli
DEPCLI_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
# Does not (yet?) exist on Docker hub
DEPCLI_DOCKER_TAG=nonesuch

# For the Node Dashboard, define a regex of mount points to ignore for the diskspace check.
NODE_EXPORTER_IGNORE_MOUNT_REGEX=^/(dev|proc|sys|run|var/lib/docker/.+)($|/)
