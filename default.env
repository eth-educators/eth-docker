# Client choice: See https://eth-docker.net/docs/Usage/ClientSetup for available options
COMPOSE_FILE=teku-base.yml:geth.yml:teku-grafana.yml:grafana-insecure.yml
# Execution client endpoint / chain source. This default uses the execution node container.
# Nimbus requires the URL to be ws:// or wss://, e.g. ws://execution:8546
# For Teku and Lighthouse, you can specify multiple endpoints separated by commas
EC_NODE=http://execution:8545
# Execution client fallback nodes, for Prysm or Nimbus. Can't be empty.
EC_FALLBACK_NODE1=http://execution:8545
EC_FALLBACK_NODE2=http://execution:8545
# Graffiti to use for validator
GRAFFITI=eth-docker
# Network to use for consensus client. If using main net, set to mainnet.
NETWORK=prater
# Network to use for execution client. If using main net, set to mainnet.
EC_NETWORK=goerli

# Some clients suggest adjusting to higher (or lower) peer count. Adjust here, per client
PRYSM_PEER_COUNT=45
LH_PEER_COUNT=50
TEKU_PEER_COUNT=74
NIM_PEER_COUNT=160

# Secure web proxy - advanced use, please see instructions
DOMAIN=example.com
ACME_EMAIL=user@example.com
CF_EMAIL=user@example.com
CF_API_TOKEN=SECRETTOKEN
AWS_PROFILE=myprofile
AWS_HOSTED_ZONE_ID=myzoneid
GRAFANA_HOST=grafana
PRYSM_HOST=prysm
EC_HOST=ec
EC_WS_HOST=ecws
CC_HOST=cc
DDNS_SUBDOMAIN=
DDNS_PROXY=true

# Teku rapid sync via initial state. Please create an Infura eth2/beacon project first, then replace the {projectid} and {secret} here
# and use this line instead of the empty one
#TEKU_RAPID_SYNC=--initial-state=https://{projectid}:{secret}@eth2-beacon-${NETWORK}.infura.io/eth/v1/debug/beacon/states/finalized
TEKU_RAPID_SYNC=

# Consensus client address. This could be comma-separated for Lighthouse, with Infura as failover,
# or could just be a remote consensus client URL for Teku, Lighthouse or Prysm "validator only" setups. Not in use for Nimbus.
CC_NODE=http://consensus:5052

# Beaconcha.in API key for sending client stats from Prysm. Used with prysm-stats.yml
# Specify as just the API key, and give the machine name separately
BEACON_STATS_API=
BEACON_STATS_MACHINE=

# P2P ports you will forward to your staking node. Adjust here if you are
# going to use something other than defaults.
EC_P2P_PORT=30303
LH_PORT=9000
LS_PORT=9000
PRYSM_PORT=13000
PRYSM_UDP_PORT=12000
NIM_PORT=9000
TEKU_PORT=9000
# Local grafana dashboard port. Do not expose to Internet, it is insecure http
GRAFANA_PORT=3000
# Local prysm web UI port. Do not expose to Internet, it is insecure http
PRYSM_WEB_PORT=7500
# Secure web proxy port, 443 and 80 are great defaults
TRAEFIK_WEB_PORT=443
TRAEFIK_WEB_HTTP_PORT=80
# Execution client RPC port, important when using ec-shared.yml. Also insecure, do not expose to Internet.
EC_RPC_PORT=8545
# Execution client WS port, used with Nimbus. Ditto insecure, do not expose to Internet.
EC_WS_PORT=8546

# Geth cache size. This matters for low-memory machines such as RasPi 4, where
# you may want to set it to 256. Geth will use the default if this is left blank.
#GETH_CACHE=--cache=256
GETH_CACHE=

# Restart policy: Set to no if you do not want services to automatically restart
RESTART=unless-stopped
# If you want debug logs, set this to debug instead of info
LOG_LEVEL=info

# You can set specific version targets and choose
# binary or compiled from source builds below,
# via `Dockerfile.binary` or `Dockerfile.source`
# These settings are not migrated when running `./ethd update`

# Nimbus
NIM_SRC_BUILD_TARGET=stable
NIM_DOCKER_TAG=multiarch-latest
NIM_DOCKERFILE=Dockerfile.binary

# Teku
TEKU_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
TEKU_DOCKER_TAG=latest
TEKU_DOCKERFILE=Dockerfile.binary

# Lighthouse
LH_SRC_BUILD_TARGET=stable
LH_DOCKER_TAG=latest
LH_DOCKERFILE=Dockerfile.binary

# Prysm
PRYSM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
PRYSM_DOCKER_TAG=stable
PRYSM_DOCKERFILE=Dockerfile.binary

# Lodestar
LS_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
LS_DOCKER_TAG=latest
LS_DOCKERFILE=Dockerfile.binary

# Erigon
ERIGON_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
ERIGON_DOCKER_TAG=stable
ERIGON_DOCKERFILE=Dockerfile.binary

# OpenEthereum
OE_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
OE_DOCKER_TAG=latest
OE_DOCKERFILE=Dockerfile.binary

# Go-Ethereum aka Geth
GETH_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
GETH_DOCKER_TAG=stable
GETH_DOCKERFILE=Dockerfile.binary

# Nethermind
NM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
NM_DOCKER_TAG=latest
NM_DOCKERFILE=Dockerfile.binary

# Besu
BESU_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
BESU_DOCKER_TAG=latest
BESU_DOCKERFILE=Dockerfile.binary

# eth2.0-deposit-cli
DEPCLI_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
# Does not (yet?) exist on Docker hub
DEPCLI_DOCKER_TAG=nonesuch
DEPCLI_LOCALDIR=./.eth

# For the Node Dashboard, define a regex of mount points to ignore for the diskspace check.
NODE_EXPORTER_IGNORE_MOUNT_REGEX=^/(dev|proc|sys|run|var/lib/docker/.+)($|/)
