version: "3.9"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  execution:
    restart: "unless-stopped"
    build:
      context: ./reth
      dockerfile: ${RETH_DOCKERFILE}
      args:
        - BUILD_TARGET=${RETH_SRC_BUILD_TARGET:-main}
        - SRC_REPO=${RETH_SRC_REPO:-https://github.com/paradigmxyz/reth}
        - DOCKER_TAG=${RETH_DOCKER_TAG:-latest}
        - DOCKER_REPO=${RETH_DOCKER_REPO:-ghcr.io/paradigmxyz/reth}
    stop_grace_period: 5m
    stop_signal: SIGINT
    image: reth:local
    user: reth
    environment:
      - JWT_SECRET=${JWT_SECRET:-}
      - EL_EXTRAS=${EL_EXTRAS:-}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ARCHIVE_NODE=${ARCHIVE_NODE:-}
      - NETWORK=${NETWORK}
      # Make this RUST_LOG=${LOG_LEVEL:-info},engine=trace when requiring deep debug
      - RUST_LOG=${LOG_LEVEL:-info}
      - RUST_LOG_STYLE=never
    volumes:
      - reth-el-data:/var/lib/reth
      - /etc/localtime:/etc/localtime:ro
      - jwtsecret:/var/lib/reth/ee-secret
    ports:
      - ${HOST_IP:-}${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/tcp
      - ${HOST_IP:-}${EL_P2P_PORT:-30303}:${EL_P2P_PORT:-30303}/udp
    networks:
      default:
        aliases:
          - eth1
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - reth
      - node
      - --datadir
      - /var/lib/reth
      - --metrics
      - 0.0.0.0:6060
      - --port
      - ${EL_P2P_PORT:-30303}
      - --discovery.port
      - ${EL_P2P_PORT:-30303}
      - --nat
      - publicip
      - --http
      - --http.addr
      - 0.0.0.0
      - --http.port
      - ${EL_RPC_PORT:-8545}
      - --http.api
      - web3,eth,net
      - --http.corsdomain=*
      - --ws
      - --ws.addr
      - 0.0.0.0
      - --ws.port
      - ${EL_WS_PORT:-8546}
      - --ws.api
      - web3,eth,net
      - --ws.origins=*
      - --authrpc.addr
      - 0.0.0.0
      - --authrpc.port
      - ${EE_PORT:-8551}
      - --authrpc.jwtsecret
      - /var/lib/reth/ee-secret/jwtsecret
    labels:
      - traefik.enable=true
      - traefik.http.routers.${EL_HOST:-el}.service=${EL_HOST:-el}
      - traefik.http.routers.${EL_HOST:-el}.entrypoints=websecure
      - traefik.http.routers.${EL_HOST:-el}.rule=Host(`${EL_HOST:-el}.${DOMAIN}`)
      - traefik.http.routers.${EL_HOST:-el}.tls.certresolver=letsencrypt
      - traefik.http.routers.${EL_HOST:-el}lb.service=${EL_HOST:-el}
      - traefik.http.routers.${EL_HOST:-el}lb.entrypoints=websecure
      - traefik.http.routers.${EL_HOST:-el}lb.rule=Host(`${EL_LB:-el-lb}.${DOMAIN}`)
      - traefik.http.routers.${EL_HOST:-el}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${EL_HOST:-el}.loadbalancer.server.port=${EL_RPC_PORT:-8545}
      - traefik.http.routers.${EL_WS_HOST:-elws}.service=${EL_WS_HOST:-elws}
      - traefik.http.routers.${EL_WS_HOST:-elws}.entrypoints=websecure
      - traefik.http.routers.${EL_WS_HOST:-elws}.rule=Host(`${EL_WS_HOST:-elws}.${DOMAIN}`)
      - traefik.http.routers.${EL_WS_HOST:-elws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.service=${EL_WS_HOST:-elws}
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.entrypoints=websecure
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.rule=Host(`${EL_WS_LB:-elws-lb}.${DOMAIN}`)
      - traefik.http.routers.${EL_WS_HOST:-elws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${EL_WS_HOST:-elws}.loadbalancer.server.port=${EL_WS_PORT:-8546}
      - traefik.http.routers.${EE_HOST:-ee}.service=${EE_HOST:-ee}
      - traefik.http.routers.${EE_HOST:-ee}.entrypoints=websecure
      - traefik.http.routers.${EE_HOST:-ee}.rule=Host(`${EE_HOST:-ee}.${DOMAIN}`)
      - traefik.http.routers.${EE_HOST:-ee}.tls.certresolver=letsencrypt
      - traefik.http.services.${EE_HOST:-ee}.loadbalancer.server.port=${EE_PORT:-8551}
volumes:
  reth-el-data:
  jwtsecret:
