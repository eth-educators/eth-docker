ARG DOCKER_TAG
ARG DOCKER_VC_TAG

FROM statusim/nimbus-eth2:${DOCKER_TAG} as consensus

# Included here to avoid build-time complaints
ARG BUILD_TARGET

ARG UID=10002

USER root

RUN groupmod -g "${UID}" user && usermod -u "${UID}" -g "${UID}" user

RUN set -eux; \
        apt-get update; \
        DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y gosu ca-certificates bash tzdata; \
        rm -rf /var/lib/apt/lists/*; \
# verify that the binary works
        gosu nobody true

# Create data mount point with permissions
RUN mkdir -p /var/lib/nimbus/ee-secret && chown -R user:user /var/lib/nimbus && chmod -R 700 /var/lib/nimbus && chmod 777 /var/lib/nimbus/ee-secret

# Copy beacon_node into $PATH
RUN cp /home/user/nimbus_beacon_node /usr/local/bin/nimbus_beacon_node
COPY ./docker-entrypoint.sh /usr/local/bin/
USER user

ENTRYPOINT ["nimbus_beacon_node"]

FROM statusim/nimbus-validator-client:${DOCKER_VC_TAG} as validator

# Included here to avoid build-time complaints
ARG BUILD_TARGET

ARG UID=10000

USER root

RUN groupmod -g "${UID}" user && usermod -u "${UID}" -g "${UID}" user

RUN set -eux; \
        apt-get update; \
        DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y gosu ca-certificates bash tzdata; \
        rm -rf /var/lib/apt/lists/*; \
# verify that the binary works
        gosu nobody true

# Create data mount point with permissions
RUN mkdir -p /var/lib/nimbus && chown -R user:user /var/lib/nimbus && chmod -R 700 /var/lib/nimbus

# Copy nimbus_validator_client into $PATH
RUN cp /home/user/nimbus_validator_client /usr/local/bin/nimbus_validator_client
# Scripts for privilege change and validator import
COPY ./docker-entrypoint-vc.sh /usr/local/bin/
COPY ./validator-import.sh /usr/local/bin/

USER user

ENTRYPOINT ["nimbus_validator_client"]
