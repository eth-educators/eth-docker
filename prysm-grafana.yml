version: '3.4'
services:
  beacon:
    expose:
      - 8080
    command:
      - --monitoring-host
      - 0.0.0.0
  validator:
    expose:
      - 8081
    command:
      - --monitoring-host
      - 0.0.0.0
  prometheus:
    restart: '${RESTART}'
    build:
      context: ./prometheus
    image: prometheus
    volumes:
      - prom-data:/prometheus
    environment:
      - CLIENT=${COMPOSE_FILE}
    expose:
      - 9090/tcp
    entrypoint: choose-config.sh
    command:
      [
        '/bin/prometheus',
        '--storage.tsdb.path=/prometheus',
        '--web.console.libraries=/usr/share/prometheus/console_libraries',
        '--web.console.templates=/usr/share/prometheus/consoles',
      ]
    depends_on:
      - beacon
      - validator
      - node-exporter
      - blackbox-exporter
      - json-exporter
      - cryptowat-exporter
  node-exporter:
    restart: '${RESTART}'
    image: prom/node-exporter
    expose:
      - 9100/tcp
  blackbox-exporter:
    restart: '${RESTART}'
    image: prom/blackbox-exporter:master
    volumes:
      - ./prometheus/blackbox.yml:/config/blackbox.yml
    expose:
      - 9115/tcp
    command:
      - --config.file=/config/blackbox.yml
  json-exporter:
    restart: '${RESTART}'
    image: quay.io/prometheuscommunity/json-exporter
    volumes:
      - ./prometheus/json.yml:/config/json.yml
    expose:
      - 7979/tcp
    command:
      - --config.file
      - /config/json.yml
  cryptowat-exporter:
    restart: '${RESTART}'
    image: nbarrientos/cryptowat_exporter
    environment:
      - CRYPTOWAT_EXCHANGES=kraken
      - CRYPTOWAT_PAIRS=ethusd,ethchf
      - CRYPTOWAT_CACHESECONDS=300
      - TZ=Europe/Zurich
    expose:
      - 9745/tcp
  grafana:
    restart: '${RESTART}'
    build:
      context: ./grafana
    image: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - 127.0.0.1:${GRAFANA_PORT}:3000/tcp
  eth2:
    depends_on:
      - grafana
volumes:
  grafana-data:
  prom-data:
